<!DOCTYPE HTML>
<html>
  <head>
    <style>

      body {
        margin: 0 px;
        padding: 0 px;
      }
      @font-face {
  font-family: 'Inconsolata';
  font-style: normal;
  font-weight: 700;
  src: local('Inconsolata'), local('Inconsolata'), url(http://themes.googleusercontent.com/static/fonts/inconsolata/v6/AIed271kqQlcIRSOnQH0yRbnBKKEOwRKgsHDreGcocg.woff) format('woff');
}
    </style>
   <div style="font-family:'Inconsolata'">&nbsp;</div>
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js"></script>
  </head>
  <body>
 

<!-- <canvas id="canvas" ></canvas>  -->

    <div id="container" ></div>
  

    <script src="http://d3lp1msu2r81bx.cloudfront.net/kjs/js/lib/kinetic-v4.5.4.min.js"></script>

    
    <script defer="defer">

 var generatedString = "Ever since the Griffin, a foot-long ship built by the French explorer Rene-Robert Cavelier, Sieur de La Salle, in his quest to find the mouth of the Mississippi River, disappeared somewhere on the Great Lakes three years ago, people have been searching for its resting place.";
      //var words = generatedString.split(" ");

      var stage = new Kinetic.Stage({
        container: 'container',
        width: 578,
        height: 400
      });

      var layer = new Kinetic.Layer();

          var xmult = 0;
          var ymult = 0;

//for each character in the string/block of test, create a canvas element thing
      for(var n = 0; n < generatedString.length; n++) {        
  
          //every time maxchar is reached, make a new line
          if( (n+1)%25 == 0 ) {
              xmult = 1;
              ymult++;
          }
          else {
              xmult++;
          }
          var i = n;
          var text = new Kinetic.Text({
             x: xmult * 13,
             y: ymult * 20,
            fill: 'black',
            text: generatedString[i],
            name: 'text',
            fontSize: 20,
            fontFamily: 'Courier',  //maybe Inconsolata
          });
        layer.add(text);
      }

      stage.add(layer);

      var cur = 0;
      var clear = false;

      var correct = new Kinetic.Animation(function(frame) {
        var word = alltext[cur];  
        word.setFill('green');
        cur++;
      }, layer );

     // function wave(n) {
          var wave = new Kinetic.Animation(function(frame) {
          var time = frame.time;
          var n = cur;
          var word = alltext[0];
          word.setX(amplitude * Math.sin(frame.time * 2 * Math.PI / period) + centerX);
        }, layer);
      //}  //end of wave function
      


      var alltext = stage.get('.text');

//look for keypress and check if key press is equal to current character
             $(document).keypress(function(evt){
               var keynum = evt.keyCode;
               var typed = String.fromCharCode(keynum);
               
               if(typed == generatedString.charAt(0)) {
                //change the color of the current character to green if correct 
                   correct.start();
                   correct.stop();
                  generatedString = generatedString.substring(1);
                  console.log(generatedString); 
               }
               else
                //wave.start();
                console.log('not correct!')
            }); 



      function myFunc(i) {
        var anim = new Kinetic.Animation(function(frame) {
          var word = alltext[i];    
          var curY = word.getPosition.y;
         
          if(frame.time%1000 == 0) {
            console.log(frame.time/1000);
            word.setFill('red');
          }
          if( (i+1) == generatedString.length)
            anim.stop();

          //word.setY(frame.time /6 + i * 50);
          //if(word.getPosition().y > 500) {
          //  word.setY(0);
          //  word.setFill('red');
         // }
        
      //group.setY(frame.time / 6);
      //anim.stop();
      }, layer);
      }

        for(var i=0; i< generatedString.length; i++)
        {
              myFunc(i);
        }

      //anim.start();
/*
      var anim = new Kinetic.Animation(function(frame) {
        var alltext = stage.get('.text');

        for(var i=0; i< para.length; i++)
        {
          var word = alltext[i];
          
          var curY = word.getPosition.y;
         
          if(frame.time%1000 == 0) {
            console.log(frame.time/1000);
            word.setFill('red');
          }
          if( (i+1) == para.length)
            anim.stop();

          //word.setY(frame.time /6 + i * 50);
          //if(word.getPosition().y > 500) {
          //  word.setY(0);
          //  word.setFill('red');
         // }
        }
      //group.setY(frame.time / 6);
      //anim.stop();
      }, layer);

  */
      

    </script>
  </body>
</html>